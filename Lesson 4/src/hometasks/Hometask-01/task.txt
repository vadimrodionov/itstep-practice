Step Computer Academy
Microsoft .NET Platform and C# Programming Language
Lesson 4 - Exceptions
Hometasks: Task 1
------------------------------------------------------------------------------

=== Основное задание ===

Реализовать модель банковского счёта.

Создать несколько банковских счетов.
Продемонстрировать выполнение операций:
- с корректными условиями:
  - пополнения счёта,
  - снятия средств со счёта,
  - запроса остатка по счёту,
  - получения выписки по счёту,
  - закрытия пустого счёта,
  - закрытия непустого счёта;
- с некорректными условиями:
  - пополнение закрытого счёта,
  - снятия средств с закрытого счёта,
  - запроса остатка по закрытому счёту,
  - закрытия закрытого счёта,
  - снятия суммы средств, превышающей доступный остаток по счёту. 

--- Требования к модели ---

Счёт должен содержать следующие данные:
- номер,
- имя владельца,
- время открытия счёта,
- время закрытия счёта (может быть неопределённым),
- валюта счёта,
- текущий остаток,
- история операций.

Каждая запись истории операций должна содержать:
- время операции,
- тип операции (пополнение/снятие),
- сумму средств, участвующую в операции (положительная для приходных операций, 
  отрицательная для расходных операций),
- статус операции (успех/неудача),
- комментарий (произвольное сообщение),
- баланс счёта до операции,
- баланс счёта после операции.

Счёт имеет следующие ограничения:
- баланс счёта не может быть отрицательным.

Счёт должен поддерживать операции:
- снятия средств (withdraw), 
- пополнения (replenish),
- запрос остатка по счёту (check balance),
- получения выписки (get history),
- закрытие счёта (close).

Каждая запрошенная операция должна быть сохранена в истории операций по счёту.

Время закрытия счёта устанавливается при выполнении операции закрытия счёта.
Если при закрытии счёта баланс его больше нуля, перед установкой времени 
закрытия счёта должна быть выполнена операция снятия всей суммы остатка на 
балансе.

Если время закрытия счёта установлено, любые операции по счёту кроме получения 
выписки запрещены.
Попытки выполнить любую операцию по закрытому счёту должны завершаться со 
стандартным исключением `InvalidOperationException` с сообщением 
`Can't perform operation <operation> on a closed account <account_number>`,
в котором <operation> - название запрошенной операции, а <account_number> - 
номер счёта. Операции над закрытыми счетами не сохраняются в истории операций 
по счёту.

Операция снятия средств должна завершаться с пользовательским исключением
`InsufficientFundsException`, если запрошенная для снятия сумма больше остатка 
на счёте. Запись о неудачной операции должна быть сохранена в истории операций 
по счёту.

=== Дополнительное задание ===

Добавить поддержку операции перевода средств с одного счёта на другой 
(transfer).

Продемонстрировать выполнение операций:
- с корректными условиями:
  - перевода по номеру существующего открытого счёта получения;
- с некорректными условиями:
  - перевода по некорректному номеру счёта получения,
  - перевода по номеру закрытого счёта получения,
  - перевода суммы, превышающей доступный остаток по счёту отправления.

--- Требования к операции ---

Запись об операции должна сохраняться в истории операций счётов отправления и 
получения.

Запись об операции в истории операций по счёту отправления в комментарии 
должна содержать сообщение `Transfer to <account_number>`, где 
<account_number> - номер счёта, на который был совершён перевод. 

Запись об операции в истории операций по счёту получения в комментарии 
должна содержать сообщение `Transfer from <account_number>`, где 
<account_number> - номер счёта, c которого был совершён перевод. 

Операция перевода подчиняется общим ограничениям на проведение операций и 
ограничениям на проведение операций снятия.

Операция перевода должна завершаться со стандартным исключением 
`ArgumentException`, если счёт с таким номером не существует или закрыт.
Исключение должно содержать сообщение 
`Target account <account_number> does not exist`, если счёт не существует,
или `Target account <account_number> is closed`, если счёт закрыт. 
В обоих случаях <account_number> - номер счёта получения. 

Операция перевода должна завершаться со стандартным исключением 
`FormatException`, если номер счёта получения некорректный.
Исключение должно содержать сообщение 
`Incorrect account number format: <account_number>`, где <account_number> - 
номер счёта получения.

В двух перечисленных выше случаях запись о неудачной операции перевода должна 
сохраняться в истории операций по счёту отправления.

------------------------------------------------------------------------------